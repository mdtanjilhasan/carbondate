import dayjs from"dayjs";import utc from"dayjs/plugin/utc.js";import timezone from"dayjs/plugin/timezone.js";import isSameOrBefore from"dayjs/plugin/isSameOrBefore.js";import isSameOrAfter from"dayjs/plugin/isSameOrAfter.js";import isLeapYear from"dayjs/plugin/isLeapYear.js";import isBetween from"dayjs/plugin/isBetween.js";import relativeTime from"dayjs/plugin/relativeTime.js";async function loadDotenv(){try{if("undefined"!=typeof require)require("dotenv").config();else{(await import("dotenv")).config()}}catch(e){}}loadDotenv(),dayjs.extend(utc),dayjs.extend(timezone),dayjs.extend(isSameOrBefore),dayjs.extend(isSameOrAfter),dayjs.extend(isLeapYear),dayjs.extend(isBetween),dayjs.extend(relativeTime);class DateTime{#e=!1;constructor(e=null){this.value=null,this.#t(e)}static init(e=null){return new DateTime(e)}now(){return this.value=dayjs().tz(this.timezone),this}format(e="YYYY-MM-DD HH:mm:ss"){return this.value=this.value.format(e),this}parse(e,t=!1){let a=this.#a(e);if(a){let s=this.#e?this.now().format("YYYY-MM-DD").value+" "+e:a;this.value=t?dayjs(s).tz(this.timezone):dayjs(s)}else this.value=null;return this}#a(e){try{let t=null,a=e;if(dayjs.isDayjs(a))return a.format("YYYY-MM-DD HH:mm:ss");this.#s(a)&&(a=dayjs(a).format("YYYY-MM-DD HH:mm:ss"));let s=a.split(" ");if(1===s.length){let e=s[0].toLowerCase();e.search(/t/)&&(s=e.split("t"))}if(1===s.length){let e=s[0];if(!this.#i(e).length)throw"Invalid Time String.";if(!this.#r(e))throw"Invalid Time String.";t=e}else{const e=s[0],a=s[1];if(!this.#u(e).length)throw"Invalid DateTime String.";const i=this.#i(a);if(!i.length)throw"Invalid DateTime String.";if(!this.#r(i[0]))throw"Invalid DateTime String.";this.#e=!1,t=`${e} ${i[0]}`}return t}catch(e){throw new Error(e)}}#s(e){let t=new Date(e);return t instanceof Date&&!isNaN(t)}#r(e){const t=e.split(":"),a=t[0],s=t[1],i=t[2];return a>=0&&a<=23&&(s>=0&&s<=59&&(i>=0&&i<=59&&(this.#e=!0,!0)))}#i(e){if(!e)return[];const t=e.match(/\d{2}:\d{2}:\d{2}/);return t?t.filter((e=>!!e)):[]}#u(e){if(!e)return[];const t=e.match(/(\d{4}-\d{2}-\d{2})|(\d{2}-\d{2}-\d{4})|(\d{4}\/\d{2}\/\d{2})|(\d{2}\/\d{2}\/\d{4})|(\d{4}\.\d{2}\.\d{2})|(\d{2}\.\d{2}\.\d{4})/);return t?t.filter((e=>!!e)):[]}addDay(){return this.value=this.value.add(1,"day"),this}addDays(e){return this.value=this.value.add(e,"day"),this}addWeek(){return this.value=this.value.add(1,"week"),this}addWeeks(e){return this.value=this.value.add(e,"week"),this}addMonth(){return this.value=this.value.add(1,"month"),this}addMonths(e){return this.value=this.value.add(e,"month"),this}addYear(){return this.value=this.value.add(1,"year"),this}addYears(e){return this.value=this.value.add(e,"year"),this}addHour(){return this.value=this.value.add(1,"hour"),this}addHours(e){return this.value=this.value.add(e,"hour"),this}addMinute(){return this.value=this.value.add(1,"minute"),this}addMinutes(e){return this.value=this.value.add(e,"minute"),this}addSecond(){return this.value=this.value.add(1,"second"),this}addSeconds(e){return this.value=this.value.add(e,"second"),this}subDay(){return this.value=this.value.subtract(1,"day"),this}subDays(e){return this.value=this.value.subtract(e,"day"),this}subWeek(){return this.value=this.value.subtract(1,"week"),this}subWeeks(e){return this.value=this.value.subtract(e,"week"),this}subMonth(){return this.value=this.value.subtract(1,"month"),this}subMonths(e){return this.value=this.value.subtract(e,"month"),this}subYear(){return this.value=this.value.subtract(1,"year"),this}subYears(e){return this.value=this.value.subtract(e,"year"),this}subHour(){return this.value=this.value.subtract(1,"hour"),this}subHours(e){return this.value=this.value.subtract(e,"hour"),this}subMinute(){return this.value=this.value.subtract(1,"minute"),this}subMinutes(e){return this.value=this.value.subtract(e,"minute"),this}subSecond(){return this.value=this.value.subtract(1,"second"),this}subSeconds(e){return this.value=this.value.subtract(e,"second"),this}currentTimezone(){return this.value=process.env?.APP_DATETIMEZONE?process.env.APP_DATETIMEZONE:this.timezone?this.timezone:dayjs.tz.guess(),this}#t(e){if(e&&!this.#n(e))throw new Error("Invalid Timezone String.");this.timezone=e||(process?.env?.APP_DATETIMEZONE?process.env.APP_DATETIMEZONE:dayjs.tz.guess())}#n(e){return Intl.supportedValuesOf("timeZone").includes(e)}diffInDays(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"day")),this}diffInWeeks(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"week")),this}diffInMonths(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"month")),this}diffInYears(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"year")),this}diffInHours(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"hour")),this}diffInMinutes(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"minute")),this}diffInSeconds(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=Math.abs(t.diff(a,"second")),this}lessThan(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isBefore(a),this}lessThanOrEqual(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSameOrBefore(a),this}greaterThan(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isAfter(a),this}greaterThanOrEqual(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSameOrAfter(a),this}equalTo(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSame(a),this}inBetween(e,t){const a=this.value;if(!dayjs.isDayjs(a))throw new Error("Invalid Object Type.");let s=e?.value?e.value:e;dayjs.isDayjs(s)||(s=this.parse(s).value);let i=t?.value?t.value:t;return dayjs.isDayjs(s)||(i=this.parse(s).value),this.value=a.isBetween(s,i),this}checkLeapYear(){return this.value=this.value.isLeapYear(),this}diffForHumans(e=null){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return a||(a=this.now().value),dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.from(a),this}dayCountInMonth(){return this.value=this.value.daysInMonth(),this}monthNumber(e){let t=[{name:"january",value:"01"},{name:"jan",value:"01"},{name:"february",value:"02"},{name:"feb",value:"02"},{name:"march",value:"03"},{name:"mar",value:"03"},{name:"april",value:"04"},{name:"apr",value:"04"},{name:"may",value:"05"},{name:"june",value:"06"},{name:"jun",value:"06"},{name:"july",value:"07"},{name:"jul",value:"07"},{name:"august",value:"08"},{name:"aug",value:"08"},{name:"september",value:"09"},{name:"sep",value:"09"},{name:"october",value:"10"},{name:"oct",value:"10"},{name:"november",value:"11"},{name:"nov",value:"11"},{name:"december",value:"12"},{name:"dec",value:"12"}];for(let a of t)if(a.name===e.toLowerCase().trim()){this.value=a.value;break}return this}startOfMonth(){const e=this.value;if(!dayjs.isDayjs(e))throw new Error("Invalid Object Type.");return this.value=e.startOf("month"),this}endOfMonth(){const e=this.value;if(!dayjs.isDayjs(e))throw new Error("Invalid Object Type.");return this.value=e.endOf("month"),this}isSameMonth(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSame(a,"month"),this}isSameDay(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSame(a,"day"),this}isSameYear(e){const t=this.value;if(!dayjs.isDayjs(t))throw new Error("Invalid Object Type.");let a=e?.value?e.value:e;return dayjs.isDayjs(a)||(a=this.parse(a).value),this.value=t.isSame(a,"year"),this}}export default DateTime;